*&---------------------------------------------------------------------*
*& 包含               ZPSI003_TOP
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& DEFINE TYPE-POOLS
*&---------------------------------------------------------------------*

TYPE-POOLS: slis,icon.
TABLES:sscrfields.

*按钮定义
SELECTION-SCREEN: FUNCTION KEY 1.

*&---------------------------------------------------------------------*
*& DEFINE CONTROLS
*&---------------------------------------------------------------------*
**CONTROLS message_log TYPE TABLEVIEW USING SCREEN '3100'.

*&---------------------------------------------------------------------*
*& Define DEFERRED/LOAD
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
* Class/类
*----------------------------------------------------------------------*
* local class to handle semantic checks
CLASS lc_event_receiver DEFINITION DEFERRED.
*----------------------------------------------------------------------*
*       CLASS lc_event_receiver DEFINITION
*----------------------------------------------------------------------*
CLASS lc_event_receiver DEFINITION.

  PUBLIC SECTION.


    "处理更改
    METHODS handle_data_changed
                  FOR EVENT data_changed OF cl_gui_alv_grid
      IMPORTING er_data_changed.

    METHODS handle_changed_finished
                  FOR EVENT data_changed_finished OF cl_gui_alv_grid
      IMPORTING e_modified et_good_cells.

    "双击
    METHODS catch_doubleclick
                  FOR EVENT double_click OF cl_gui_alv_grid
      IMPORTING e_row
                  e_column
                  es_row_no.

    "热键
    METHODS handle_hotspot_click
                  FOR EVENT hotspot_click OF cl_gui_alv_grid
      IMPORTING e_row_id e_column_id es_row_no.

    METHODS  handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.

    "实现用户命令
    METHODS  handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.

    METHODS handle_button_click
                  FOR EVENT button_click OF cl_gui_alv_grid
      IMPORTING es_col_id es_row_no.

    METHODS on_f4_help
                  FOR EVENT onf4 OF cl_gui_alv_grid
      IMPORTING e_fieldname
                  es_row_no
                  er_event_data
                  et_bad_cells
                  e_display.

    METHODS handle_set_alv IMPORTING VALUE(zalv) TYPE string.
    METHODS handle_get_alv RETURNING VALUE(zalv) TYPE string.
  PRIVATE SECTION.
    DATA: error_in_data TYPE c,
          gc_alv        TYPE string.
* This flag is set if any error occured in one of the

ENDCLASS.                    "lc_event_receiver DEFINITION

*----------------------------------------------------------------------*
*       CLASS lc_event_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lc_event_receiver IMPLEMENTATION.


  METHOD handle_data_changed."更改的数据CHECK或者做其他处理
    PERFORM frm_data_changed USING er_data_changed gc_alv.
  ENDMETHOD.                    "handle_data_changed

  METHOD handle_changed_finished."更改的数据CHECK或者做其他处理
    DATA: gt_change     TYPE lvc_t_modi.
    CLEAR: gt_change, gt_change[].
    gt_change = et_good_cells[].

    IF gt_change[] IS NOT INITIAL.
      PERFORM frm_changed_finished USING gt_change gc_alv.
    ENDIF.
    CLEAR gt_change.
  ENDMETHOD.                    "handle_data_changed_finished


  METHOD catch_doubleclick.
*    PERFORM frm_alv_doubleclick    USING e_row e_column es_row_no gc_alv.
  ENDMETHOD.                    "catch_doubleclick


  METHOD handle_hotspot_click.
    PERFORM frm_hotspot_click  USING e_row_id e_column_id es_row_no gc_alv.
  ENDMETHOD.                    "handle_hotspot_click


  METHOD handle_toolbar.
*    PERFORM frm_handle_toolbar     USING e_object e_interactive gc_alv.
  ENDMETHOD.                    "HANDLE_TOOLBAR


  METHOD handle_user_command.
*    PERFORM frm_user_command USING e_ucomm gc_alv.
  ENDMETHOD.                    "HANDLE_USER_COMMAND

  METHOD on_f4_help.
    PERFORM frm_f4_help USING e_fieldname
                                es_row_no
                                er_event_data
                                et_bad_cells
                                e_display
                                gc_alv.
    er_event_data->m_event_handled = 'X'.
  ENDMETHOD.                    "on_f4_help

  METHOD handle_button_click.

  ENDMETHOD.


  METHOD handle_set_alv.
    gc_alv  = zalv.
  ENDMETHOD.                    "handle_set_alv
  METHOD handle_get_alv.
    zalv = gc_alv.
  ENDMETHOD.             "handle_set_alv
ENDCLASS.                    "lc_event_receiver IMPLEMENTATION


CLASS lcl_event_handler3 DEFINITION.
  PUBLIC SECTION.
    METHODS:
*--To add new functional buttons to the ALV toolbar
      handle_toolbar FOR EVENT toolbar OF cl_gui_alv_grid
        IMPORTING e_object e_interactive ,

**--To implement user commands
      handle_user_command
                    FOR EVENT user_command OF cl_gui_alv_grid
        IMPORTING e_ucomm ,
      double_click FOR EVENT double_click OF cl_gui_alv_grid
        IMPORTING e_row e_column  es_row_no,

      get_list_data,

      generate_output.


ENDCLASS.                    "lcl_event_handler2 DEFINITION

*&---------------------------------------------------------------------*
*&       Class (Implementation)  lcl_event_receiver
*&---------------------------------------------------------------------*
*        实现类功能
*----------------------------------------------------------------------*
CLASS lcl_event_handler3 IMPLEMENTATION.
*--Handle Toolbar
  METHOD handle_toolbar.
    PERFORM handle_toolbar3 USING e_object e_interactive .
  ENDMETHOD .                    "handle_toolbar

**--Handle User Command
  METHOD handle_user_command .
    PERFORM handle_user_command3 USING e_ucomm .
  ENDMETHOD.                    "handle_user_command
  METHOD double_click .
    PERFORM handel_double_click3 USING e_row e_column es_row_no.
  ENDMETHOD.
  METHOD get_list_data.
    PERFORM frm_get_list.
  ENDMETHOD.
  METHOD generate_output.
    PERFORM frm_alv_output."frm_alv_create.
  ENDMETHOD.

ENDCLASS.                    "lcl_event_handler2 IMPLEMENTATION
"lcl_alv_grid IMPLEMENTATION

DATA: gc_event_handler3 TYPE REF TO lcl_event_handler3.
*&---------------------------------------------------------------------*
*& DEFINE REFERENCE
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& DEFINE CONSTANTS
*&---------------------------------------------------------------------*
CONSTANTS: gc_mode_change  TYPE char3 VALUE 'CHG',
           gc_mode_create  TYPE char3 VALUE 'CRT',
           gc_mode_display TYPE char3 VALUE 'DIS'.
*&---------------------------------------------------------------------*
*& DEFINE TABLES
*&---------------------------------------------------------------------*
TABLES: ztps0011,ztps0011_fw,t001,lfa1,csks.
*&---------------------------------------------------------------------*
*& DEFINE TYPES
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& DEFINE DATA
*&---------------------------------------------------------------------*
DATA: gs_output    TYPE zpo_mt_ps011_req,
      gs_input     TYPE zpo_mt_ps011_res,
      gt_ps011     TYPE TABLE OF ztps0011,
      gs_ps011     TYPE ztps0011,
      gs_message   TYPE zcms0001,
      gv_mode      TYPE char3,
      ok_code      TYPE sy-ucomm,
      functxt      TYPE smp_dyntxt,
      gv_authcheck TYPE boolean,
      gs_msg       TYPE zcms0001.

DATA: gv_jlmc   TYPE char20,
      gv_spflms TYPE char20.
*---- 附件管理参数定义
TYPES:
  BEGIN OF ty_out.
    INCLUDE STRUCTURE ztfile.
TYPES:
  index   TYPE char5,
  message TYPE bapi_msg,
  unamet  TYPE text40,
  END OF ty_out.
DATA: gt_ztfile TYPE TABLE OF ztfile,
      gs_ztfile TYPE ztfile.
DATA: g_filename       TYPE string.
DATA: gt_fj_alv           TYPE TABLE OF ty_out,
      gs_fj_alv           TYPE ty_out,
      gt_fieldcat_fj      TYPE lvc_t_fcat,
      g_container_fj      TYPE scrfname VALUE 'CONTAINER_FJ',
      g_grid_fj           TYPE REF TO cl_gui_alv_grid,
      g_con_fj            TYPE REF TO cl_gui_custom_container,
      g_event_receiver_fj TYPE REF TO lc_event_receiver.
DATA: g_layout_fj         TYPE lvc_s_layo.
DATA: stbl                TYPE lvc_s_stbl.


*----- 第三方服务扣款行项目
TYPES:
  BEGIN OF ty_fwitem.
    INCLUDE STRUCTURE ztps0011_fw.
TYPES:
  index    TYPE i,
  chk      TYPE c,
  status   TYPE char50,
  rowcolor TYPE char4,             "行颜色
  celltab  TYPE lvc_t_styl,        "ALV 控制: 单元格的类型表
  coltab   TYPE lvc_t_scol,        "ALV 控制: 单元格颜色表
  END OF ty_fwitem.

DATA:gt_fwitem          TYPE TABLE OF ty_fwitem,
     gs_fwitem          TYPE ty_fwitem,
     gt_fieldcat_i      TYPE lvc_t_fcat,
     g_container_i      TYPE scrfname VALUE 'CONTAINER_ITEM',
     g_grid_i           TYPE REF TO cl_gui_alv_grid,
     g_con_i            TYPE REF TO cl_gui_custom_container,
     g_event_receiver_i TYPE REF TO lc_event_receiver.
DATA: g_layout_i TYPE lvc_s_layo,
      stbl_i     TYPE lvc_s_stbl.
DATA: g_valid TYPE c.""data_change

*----- 更新字段值用，初始内表
DATA: gt_t001 TYPE TABLE OF t001,
      gt_cskt TYPE TABLE OF cskt,
      gt_prps TYPE TABLE OF prps.

"错误消息类
DATA:gt_message TYPE usmd_t_message.
DATA:gv_error TYPE c.

"选择屏幕上的参数
*DATA:functxt      TYPE smp_dyntxt.
*工具栏上排除的按钮
DATA:gt_exclude   TYPE ui_functions.
DATA:gt_exclude_bg   TYPE ui_functions.

*-----  单据选择后列出清单
TYPES:BEGIN OF ty_dj_list,
        index  TYPE numc5,
        zdjlx1 TYPE ztps0011-zdjlx1,
        zdjlxt TYPE ztps0011-zdjlxt,
        zdjbh  TYPE ztps0011-zdjbh,
        zhtbh  TYPE ztps0011-zhtbh,
        zhtmc  TYPE ztmm_jbxx-zhtmc,
        zfwht  TYPE ztmm_jbxx-zfwht,
        zsgdw  TYPE ztps0011-zsgdw,
        zgfmc  TYPE ztps0011-zgfmc,
*        bukrs   TYPE t001-bukrs,
        zkkje  TYPE ztps0011_fw-zkkje,
*        zkkfyms TYPE ztps0011-zkkfyms,
        kostl  TYPE csks-kostl,
        ktext  TYPE cskt-ktext,
*        rowcolor TYPE char4,
*        celltab  TYPE lvc_t_scol,
        zcjrq  TYPE ztps0011-zcjrq,
        zcjry  TYPE ztps0011-zcjry,
        zspzt1 TYPE ztps0011-zspzt1,
        zspztt TYPE ztps0011-zspzt2,
      END OF ty_dj_list.
DATA:gt_dj_list TYPE TABLE OF ty_dj_list WITH HEADER LINE .

*TYPES:BEGIN OF ty_list_output,



DATA: gs_grid_list TYPE REF TO cl_gui_alv_grid.
DATA: gc_alv_common_list    TYPE REF TO cl_gui_custom_container,
      g_docking_container_k TYPE REF TO cl_gui_docking_container,
      gt_fieldcat_list      TYPE lvc_t_fcat,
      gs_fieldcat_list      TYPE lvc_s_fcat,
      gs_layout_list        TYPE lvc_s_layo,
      l_variant             TYPE disvariant.
DATA: gt_uifunction  TYPE ui_functions,
      gt_uifunction3 TYPE ui_functions.
DEFINE set_fieldcat.
  CLEAR &1.
 &1-fieldname = &3.
 &1-coltext = &4.
 &1-edit = &5.
*  &1-ref_table = &6.
*  &1-ref_field = &7.
 &1-checkbox = &6.
 &1-outputlen = &7.
*  &1-EDIT = &10.
 APPEND &1 TO &2.
 CLEAR &1.
END-OF-DEFINITION.

*&---------------------------------------------------------------------*
*& DEFINE FIELD-SYMBOLS
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& DEFINE SCREENS
*&---------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-t01.
PARAMETERS: p_djbh TYPE ztps0011-zdjbh ."MATCHCODE OBJECT zshps_kkd MODIF ID sh1.
*SELECT-OPTIONS:s_djlxt FOR ztps0011-zdjlxt MODIF ID sh1.
*               s_fwht FOR ztps0011-zfwht MODIF ID sh1,
*               z_htmc FOR ztps0011-zhtmc MODIF ID sh1,
*               z_xmh FOR ztps0011-zxmh MODIF ID sh1,
*               z_xmm FOR ztps0011-zxmm MODIF ID sh1,
*               z_spzt1 FOR ztps0011-zspzt1 MODIF ID sh1,
*               z_spzt2 FOR ztps0011-zspzt2 MODIF ID sh1,
*               z_cjsj FOR ztps0011-zcjsj MODIF ID sh1,
*               z_cjry FOR ztps0011-zcjry MODIF ID sh1.
SELECT-OPTIONS: s_zfwht FOR ztps0011-zfwht MODIF ID m1,
                s_zsgdw FOR lfa1-lifnr MODIF ID m1,  "ztps0011-zsgdw
                s_zskgs FOR t001-bukrs MODIF ID m1,  "ztps0011_fw-zskgs
                s_zcjrq FOR sy-datum MODIF ID m1,    "ztps0011-zcjrq
                s_zcjry FOR ztps0011-zcjry MODIF ID m1,
                s_kostl FOR csks-kostl MODIF ID m1.  "ztps0011_fw-kostl
SELECTION-SCREEN END OF BLOCK b1.
SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-t02.
PARAMETERS: p_create RADIOBUTTON GROUP gp1 DEFAULT 'X' USER-COMMAND singleclick,
            p_modify RADIOBUTTON GROUP gp1,
            p_dis    RADIOBUTTON GROUP gp1.
SELECTION-SCREEN END OF BLOCK b2.
*&---------------------------------------------------------------------*
*& DEFINE GLOBAL MARCOS
*&---------------------------------------------------------------------*
*define mcr_xxx_xxx.
*
*END-OF-DEFINITION.

*&---------------------------------------------------------------------*